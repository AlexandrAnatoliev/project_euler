// arr.h - работа с двумерным массивом

#ifndef ARR					// защита от повторного включения файла
#define ARR

#include <stdbool.h>
#include <stdio.h>

	#ifndef COLUMNS
		#ifndef ROWS
			#define COLUMNS 6	// значения по умолчанию
			#define ROWS 6
		#else
			#define COLUMNS 6
		#endif
	#else
		#ifndef ROWS
			#define ROWS 6
		#endif
	#endif

#define ARR_INIT bool arr[ROWS][COLUMNS] = {0};	// инициализация массива

bool show_arr(const bool (*arr)[COLUMNS]);			
// операция:	вывод содержимого массива на экран
// предусловие:	принимает указатель на инициализированный массив
// постусловие:	выводит содержимое массива в виде таблицы
// 		возвращает true

bool push_flag(bool (*arr)[COLUMNS], int row, int column);
// операция:	включение флага в массиве
// 		одновременно отмечаются как "занятые" нижлежайшие значения
//
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
//
// 		push_flag(arr, 2, 3);
//
// 		0 0 0 0 0 0
// 		0 0 0 0 0 0
// 		0 0 0 1 0 0
// 		0 0 0 1 0 0
// 		0 0 0 1 0 0
// 		0 0 0 1 0 0
//
// предусловие:	arr	- указатель на инициализированный массив
// 		row	- ряд
// 		column	- столбец
// постусловие: отмечаются флаги в массиве
// 		возвращается true

bool del_flag(bool (*arr)[COLUMNS], int row, int column);
// операция:	удаление флага из  массива
// 		одновременно отмечаются как "свободные" нижлежайшие значения
//
// 		0 0 0 0 0 0
// 		0 1 0 0 0 0
// 		0 1 1 1 1 0
// 		0 1 1 1 1 0
// 		0 1 1 1 1 0
// 		0 1 1 1 1 0
//
// 		del_flag(arr, 2, 3);
//
// 		0 0 0 0 0 0
// 		0 1 0 0 0 0
// 		0 1 1 0 1 0
// 		0 1 1 0 1 0
// 		0 1 1 0 1 0
// 		0 1 1 0 1 0
//
// предусловие:	arr	- указатель на инициализированный массив
// 		row	- ряд
// 		column	- столбец
// постусловие: выключаются флаги в массиве
// 		возвращается true
#endif

